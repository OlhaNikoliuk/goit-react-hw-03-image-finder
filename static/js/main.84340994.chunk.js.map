{"version":3,"sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","services/images-api.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoaderWrapper","Spinner","type","color","height","width","timeout","fetchImages","searchQuery","page","fetch","then","response","ok","json","console","log","Promise","reject","Error","SearchBar","SearchForm","SearchFormBtn","SearchFormButtonLabel","SearchFormInput","INITIAL_STATE","Searchbar","state","onInputChange","e","setState","currentTarget","value","toLowerCase","onFormSubmit","preventDefault","trim","props","onSubmit","alert","formReset","this","autoComplete","autoFocus","placeholder","onChange","Component","Gallery","GalleryItem","Image","ImageGalleryItem","webformatURL","tags","onClick","src","alt","ImageGalery","images","handleOpenModal","className","map","id","largeImageURL","LoadButton","Button","Overlay","ModalWindow","modalRoot","document","querySelector","Modal","handleKeyDown","code","onCloseModal","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","selectedImg","App","loading","error","status","handleSearchForm","imageName","onBtnSearch","toggleModal","data","prevProps","prevState","imagesAPI","hits","length","toast","duration","position","scrollTo","top","documentElement","scrollHeight","behavior","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.84340994.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import Loader from \"react-loader-spinner\";\nimport {LoaderWrapper} from './Loader.styled'\n\nfunction Spinner() {\n  return (\n    <LoaderWrapper>\n      <Loader\n      type=\"Grid\"\n      color=\"#3f51b5\"\n      height={80}\n      width={80}\n      timeout={3000} //3 secs\n    />\n    </LoaderWrapper>\n  );\n}\nexport default Spinner;","const API_KEY = \"21094416-818b6ee494a1708108f1a0838\";\nconst API_URL = \"https://pixabay.com/api/\";\n\nfunction fetchImages(searchQuery, page) {\n  return fetch(\n    `${API_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    console.log(response);\n    return Promise.reject(new Error(\"Can`t find image with entered name\"));\n  });\n}\n\nexport default fetchImages;\n","import styled from \"@emotion/styled/macro\";\n\nexport const SearchBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &:placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nimport {\n  SearchBar,\n  SearchForm,\n  SearchFormBtn,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from \"./Searchbar.styled\";\n\nconst INITIAL_STATE = {\n  searchQuery: \"\",\n};\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  onInputChange = (e) => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  onFormSubmit = (e) => {\n    e.preventDefault();\n    const { searchQuery } = this.state;\n\n    if (searchQuery.trim() === \"\") {\n      //сюда можно добавить нормальную нотификашку\n      alert(\"Enter search image\");\n      return;\n    }\n    this.props.onSubmit(searchQuery);\n    this.setState({ searchQuery: \"\" });\n  };\n\n  formReset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { searchQuery } = this.state;\n    return (\n      <SearchBar>\n        <SearchForm onSubmit={this.onFormSubmit}>\n          <SearchFormBtn type=\"submit\">\n            <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n          </SearchFormBtn>\n\n          <SearchFormInput\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={this.onInputChange}\n            value={searchQuery}\n          />\n        </SearchForm>\n      </SearchBar>\n    );\n  }\n}\n\nexport default Searchbar;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 20px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from \"@emotion/styled/macro\";\n\nexport const GalleryItem = styled.li`\n  border-radius: 2px;\n  /* box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12); */\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import PropTypes from \"prop-types\";\n\nimport { GalleryItem, Image } from \"./ImageGalleryItem.styled\";\n\nfunction ImageGalleryItem({ webformatURL, tags, onClick }) {\n  return (\n    <GalleryItem >\n      <Image onClick={onClick} src={webformatURL} alt={tags} />\n    </GalleryItem>\n  );\n}\n\nImageGalleryItem.propTypes = {\n \n  onClick: PropTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import PropTypes from \"prop-types\";\n\nimport { Gallery } from \"./ImageGallery.styled\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nfunction ImageGalery({ images, handleOpenModal }) {\n  return (\n    <Gallery className=\"ImageGallery\">\n      {images.map(({ id, webformatURL, largeImageURL, tags }) => {\n        return (\n          <ImageGalleryItem\n            key={id}\n            webformatURL={webformatURL}\n            tags={tags}\n            onClick={() => handleOpenModal(largeImageURL)}\n          ></ImageGalleryItem>\n        );\n      })}\n    </Gallery>\n  );\n}\n\nImageGalery.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      tags: PropTypes.string,\n      webformatURL: PropTypes.string,\n      largeImageURL: PropTypes.string,\n    })\n  ),\n  handleOpenModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGalery;\n","import styled from \"@emotion/styled/macro\";\n\nexport const LoadButton = styled.button`\n  min-width: 100px;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  margin: 0 auto;\n  margin-top: 20px;\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from \"prop-types\";\n\nimport { LoadButton } from \"./Button.styled\";\n\nfunction Button({ onClick }) {\n  return (\n    <LoadButton className=\"Button\" type=\"button\" onClick={onClick}>\n      Load more\n    </LoadButton>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\n\nexport default Button;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nimport { Overlay, ModalWindow } from \"./Modal.styled\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onCloseModal();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.onCloseModal();\n    }\n  };\n  render() {\n    return createPortal(\n      <Overlay onClick={this.handleBackdropClick}>\n        <ModalWindow>\n          <img src={this.props.selectedImg} alt=\"\" />\n        </ModalWindow>\n      </Overlay>,\n      modalRoot\n    );\n  }\n}\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\nexport default Modal;\n","import React, { Component } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\n\nimport Spinner from \"../src/components/Loader/Loader\";\nimport imagesAPI from \"../src/services/images-api\";\nimport Searchbar from \"../src/components/Searchbar/Searchbar\";\nimport ImageGalery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"../src/components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    searchQuery: \"\",\n    page: 1,\n    loading: false,\n    selectedImg: null,\n    error: null,\n    status: \"idle\",\n  };\n\n  //важно указывать оба параметра (prevProps, prevState)!!\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n    if (prevState.searchQuery !== searchQuery) {\n      this.setState({ status: \"pending\", page: 1, images: [] });\n      this.fetchImages(searchQuery, page);\n    }\n\n    if (prevState.page !== page) {\n      this.fetchImages(searchQuery, page);\n    }\n  }\n\n  handleSearchForm = (imageName) => {\n    this.setState({ searchQuery: imageName });\n  };\n\n  fetchImages(searchQuery, page) {\n    imagesAPI(searchQuery, page)\n      .then(({ hits }) => {\n        if (hits.length === 0) {\n          toast.error(\"Oops.. no images found\", {\n            duration: 4000,\n            position: \"top-right\",\n          });\n        } else {\n          this.setState(({ images }) => ({\n            images: [...images, ...hits],\n            status: \"resolved\",\n          }));\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n      .catch((error) => this.setState({ error }));\n  }\n\n  onBtnSearch = () => {\n    this.setState(({ page }) => ({\n      page: page + 1,\n    }));\n  };\n\n  toggleModal = (data) => {\n    this.setState({ selectedImg: data });\n  };\n\n  render() {\n    const { selectedImg, images, status } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSearchForm}></Searchbar>\n        {status === \"pending\" && <Spinner />}\n        {status === \"resolved\" && (\n          <>\n            <ImageGalery handleOpenModal={this.toggleModal} images={images} />\n            <Button onClick={this.onBtnSearch} />\n            {selectedImg && (\n              <Modal\n                selectedImg={selectedImg}\n                onCloseModal={this.toggleModal}\n              />\n            )}\n          </>\n        )}\n        <Toaster />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}